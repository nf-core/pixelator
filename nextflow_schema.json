{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/PixelgenTechnologies/nf-core-pixelator/master/nextflow_schema.json",
    "title": "nf-core/pixelator pipeline parameters",
    "description": "Pipeline for analysis of Molecular Pixelation assays",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "schema": "assets/schema_input.json",
                    "description": "Path to tab-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/pixelator/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-tsv"
                },
                "outdir": {
                    "type": "string",
                    "default": "./results",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                }
            }
        },
        "preqc_options": {
            "title": "QC/Filtering/Trimming options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "properties": {
                "trim_front": {
                    "type": "integer",
                    "description": "Trim N bases from the front of the reads",
                    "default": 0
                },
                "trim_tail": {
                    "type": "integer",
                    "description": "Trim N bases from the tail of the reads",
                    "default": 0
                },
                "max_length": {
                    "type": ["integer", "null"],
                    "description": "The maximum length (bases) of a read (longer reads will be trimmed off). If you set this argument it will overrrule the value from the chosen design",
                    "default": null
                },
                "min_length": {
                    "type": ["integer", "null"],
                    "description": "The minimum length (bases) of a read (shorter reads will be discarded). If you set this argument it will overrrule the value from the chosen design.",
                    "default": null
                },
                "max_n_bases": {
                    "description": "The maximum number of Ns allowed in a read",
                    "type": "integer",
                    "default": 3
                },
                "avg_qual": {
                    "description": "Minimum avg. quality a read must have (0 will disable the filter)",
                    "type": "integer",
                    "default": 20
                },
                "dedup": {
                    "description": "Remove duplicated reads (exact same sequence)",
                    "type": "boolean",
                    "default": false
                },
                "remove_polyg": {
                    "description": "Remove PolyG sequences (length of 10 or more)",
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "adapterqc_options": {
            "title": "Adapter QC Options",
            "properties": {
                "mismatches": {
                    "description": "The number of mismatches allowed (in percentage)  [default: 0.1; 0.0<=x<=0.9]",
                    "type": "number",
                    "default": 0.1
                },
                "pbs1": {
                    "description": "The PBS1 sequence that must be present in the reads. If you set this argument it will overrrule the value from the chosen design",
                    "type": ["string", "null"],
                    "default": null
                },
                "pbs2": {
                    "description": "The PBS2 sequence that must be present in the reads. If you set this argument it will overrrule the value from the chosen design",
                    "type": ["string", "null"],
                    "default": null
                }
            }
        },
        "demux_options": {
            "title": "Demux options",
            "properties": {
                "demux_mismatches": {
                    "description": "The number of mismatches allowed (in percentage)  [default: 0.1; 0.0<=x<=0.9]",
                    "type": "number",
                    "default": 0.1,
                    "minimum": 0.0,
                    "maximum": 0.9
                },
                "demux_min_length": {
                    "type": ["integer", "null"],
                    "description": "The minimum length of the barcode that must overlap when matching. If you set this argument it will overrrule the value from the chosen design",
                    "default": null
                }
            }
        },
        "collapse_options": {
            "title": "Collapse options",
            "properties": {
                "algorithm": {
                    "description": "The algorithm to use for collapsing (adjacency will peform error correction using the number of mismatches given) [default: adjacency]",
                    "default": "adjacency",
                    "enum": ["adjacency", "unique"],
                    "type": "string"
                },
                "upi1_start": {
                    "description": "The start position (0-based) of UPI1. If you set this argument it will overrrule the value from the chosen design",
                    "type": ["integer", "null"],
                    "default": null
                },
                "upi1_end": {
                    "description": "The end position (1-based) of UPI1. If you set this argument it will overrrule the  value from the chosen design",
                    "type": ["integer", "null"],
                    "default": null
                },
                "upi2_start": {
                    "description": "The start position (0-based) of UPI@. If you set this argument it will overrrule the value from the chosen design",
                    "type": ["integer", "null"],
                    "default": null
                },
                "upi2_end": {
                    "description": "The end position (1-based) of UPI2. If you set this argument it will overrrule the  value from the chosen design",
                    "type": ["integer", "null"],
                    "default": null
                },
                "umi1_start": {
                    "description": "The start position (0-based) of UMI1 (disabled by default). If you set this argument it will overrrule the value from the chosen design",
                    "type": ["integer", "null"],
                    "default": null
                },
                "umi1_end": {
                    "description": "The end position (1-based) of UMI1 (disabled by default). If you set this argument it will overrrule the  value from the chosen design",
                    "type": ["integer", "null"],
                    "default": null
                },
                "umi2_start": {
                    "description": "The start position (0-based) of UMI2 (disabled by default). If you set this argument it will overrrule the value from the chosen design",
                    "type": ["integer", "null"],
                    "default": null
                },
                "umi2_end": {
                    "description": "The end position (1-based) of UMI2 (disabled by default). If you set this argument it will overrrule the  value from the chosen design",
                    "type": ["integer", "null"],
                    "default": null
                },
                "neighbours": {
                    "description": "The number of neighbours to use when searching for similar sequences (adjacency) This number depends on the sequence depth and the ratio of erronous molecules expected. A high value can make the algoritthm slower.  [default: 60; 1<=x<=250]",
                    "default": 60,
                    "min": 1,
                    "max": 250,
                    "type": "integer"
                },
                "collapse_mismatches": {
                    "description": "The number of mismatches allowed when collapsing (adjacency)  [default: 2; 0<=x<=5]",
                    "default": 2,
                    "min": 0,
                    "max": 5,
                    "type": "integer"
                },
                "collapse_min_count": {
                    "description": "Discard molecules with with a count (reads) lower than this value  [default: 1; 0<=x<=5]",
                    "default": 1,
                    "min": 0,
                    "max": 5,
                    "type": "integer"
                },
                "use_counts": {
                    "description": "Use counts when collapsing (the difference in counts between two molecules must be more than double in order to be collapsed)",
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "cluster_options": {
            "title": "Options for pixelator cluster command.",
            "properties": {
                "min_size": {
                    "description": "The minimum size (pixels) a cluster/cell must have (default is no filtering)",
                    "type": ["integer", "null"],
                    "default": null
                },
                "max_size": {
                    "description": "The maximum size (pixels) a cluster/cell must have (default is no filtering)",
                    "type": ["integer", "null"],
                    "default": null
                },
                "max_size_recover": {
                    "description": "The maximum size cutoff to use in the recovery (--big-clusters-recover) [default: 10000]",
                    "type": "integer",
                    "default": 10000
                },
                "big_clusters_recover": {
                    "description": "Enable the recovery of big clusters/cells (above --max-size-recover) by using the community modularity approach to remove problematic edges",
                    "type": "boolean",
                    "default": false
                },
                "condition": {
                    "description": "Which approach to use to select the best community (--big-clusters-recover) optimal will use the community that maximizes the modularity max-size will iterate until the biggest component in the community is below --max-size/2 or the maximum number of iterations is reached  [default: optimal]",
                    "default": "optimal",
                    "enum": ["optimal", "max-size"],
                    "type": "string"
                },
                "cluster_min_count": {
                    "description": "Discard molecules (edges) with with a count (reads) lower than this  [default: 2; 1<=x<=50]",
                    "type": "integer",
                    "default": 2,
                    "minimum": 1,
                    "maximum": 50
                },
                "compute_polarization": {
                    "description": "Compute polarization scores matrix (clusters by markers)",
                    "type": "boolean",
                    "default": false
                },
                "compute_colocalization": {
                    "description": "Compute colocalization scores matrix (clusters by markers)",
                    "type": "boolean",
                    "default": false
                },
                "compute_coabundance": {
                    "description": "Compute coabundance scores matrix (clusters by markers)",
                    "type": "boolean",
                    "default": false
                },
                "percentile": {
                    "description": "The percentile value (0-1) to use when binarizing counts in the polarization and co-localization algorithms [default: 0.0; 0.0<=x<=1.0]",
                    "type": "number",
                    "default": 0.0,
                    "minimum": 0.0,
                    "maximum": 1.0
                }
            }
        },
        "report_options": {
            "title": "Options for pixelator report command.",
            "properties": {
                "report_name": {
                    "description": "The name for the report",
                    "type": ["string"],
                    "default": "report"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "enable_conda": {
                    "type": "boolean",
                    "description": "Run this workflow with Conda. You can also use '-profile conda' instead of providing this parameter.",
                    "hidden": true,
                    "fa_icon": "fas fa-bacon"
                },
                "testdata_root": {
                    "type": "string",
                    "description": "Root path to testdata for running local tests",
                    "hidden": true,
                    "fa_icon": "fas fa-folder-tree"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/preqc_options"
        },
        {
            "$ref": "#/definitions/adapterqc_options"
        },
        {
            "$ref": "#/definitions/demux_options"
        },
        {
            "$ref": "#/definitions/collapse_options"
        },
        {
            "$ref": "#/definitions/cluster_options"
        },
        {
            "$ref": "#/definitions/report_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}
