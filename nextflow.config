/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/pixelator Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/


// Global default params, used in configs
params {

    // Input options
    input                   = null
    input_basedir           = null

    /*
    ===============================================================
        MPX options
    ===============================================================
    */

    // Preqc options
    trim_front              = 0
    trim_tail               = 0
    max_length              = null
    min_length              = null
    max_n_bases             = 0
    avg_qual                = 20
    dedup                   = false
    remove_polyg            = false

    // adapterqc options
    adapterqc_mismatches    = 0.1

    // demux options
    demux_mismatches        = 0.1
    demux_min_length        = null

    // collapse options
    markers_ignore          = null
    algorithm               = 'adjacency'
    max_neighbours          = 60
    collapse_mismatches     = 2
    collapse_min_count      = 2

    // graph options
    multiplet_recovery                   = true
    graph_max_refinement_recursion_depth = 5
    graph_max_edges_to_split             = 5
    graph_min_count                      = 2

    // annotate options
    min_size                = null
    max_size                = null
    dynamic_filter          = 'min'
    aggregate_calling       = true

    // analysis options
    compute_polarization               = true
    compute_colocalization             = true
    use_full_bipartite                 = false
    polarization_transformation        = "log1p"
    polarization_min_marker_count      = 5
    polarization_n_permutations        = 50
    colocalization_transformation      = "rate-diff"
    colocalization_neighbourhood_size  = 1
    colocalization_n_permutations      = 50
    colocalization_min_region_count    = 5
    colocalization_min_marker_count    = 5

    // Output options
    save_amplicon_reads                = false
    save_qc_passed_reads               = false
    save_qc_failed_reads               = false
    save_demux_processed_reads         = false
    save_demux_failed_reads            = false
    save_collapsed_reads               = false
    save_edgelist                      = false
    save_annotate_dataset              = false
    save_raw_component_metrics         = false
    save_analysis_dataset              = false

    // layout options
    no_node_marker_counts              = false
    layout_algorithm                   = "wpmds_3d"

    // skip options
    skip_report                        = false
    skip_denoise                       = false
    skip_analysis                      = false
    skip_layout                        = false

    // Main pixelator container override
    pixelator_container                = null


    /*
    ===============================================================
        PNA options
    ===============================================================
    */
    save_pna_amplicon_reads            = false
    save_pna_demux_parquet             = false
    save_pna_demux_passed_reads        = false
    save_pna_demux_failed_reads        = false
    save_pna_collapsed_reads           = false
    save_pna_graph_pixelfile           = false
    save_pna_denoise_pixelfile         = false
    save_pna_analysis_pixelfile        = false

    // PNA amplicon
    pna_amplicon_mismatches            = 0.1
    pna_amplicon_remove_polyg          = true
    pna_amplicon_quality_cutoff        = 20

    // PNA demux
    pna_demux_mismatches               = 1
    pna_demux_output_chunk_reads       = '50M'
    pna_demux_output_max_chunks        = 8
    pna_demux_strategy                 = "independent"

    // PNA collapse
    pna_collapse_mismatches            = 2
    pna_collapse_algorithm             = 'directional'

    // PNA graph
    pna_graph_multiplet_recovery                               = true
    pna_graph_leiden_iterations                                = 1
    pna_graph_initial_stage_leiden_resolution                  = 1.0
    pna_graph_refinement_stage_leiden_resolution               = 0.01
    pna_graph_min_count                                        = 1
    pna_graph_min_component_size_in_refinement                 = 1000
    pna_graph_max_refinement_recursion_depth                   = 5
    pna_graph_initial_stage_max_edges_to_remove                = null
    pna_graph_refinement_stage_max_edges_to_remove             = 4
    pna_graph_initial_stage_max_edges_to_remove_relative       = null
    pna_graph_refinement_stage_max_edges_to_remove_relative    = null
    pna_graph_graph_min_component_size_to_prune                = 100
    pna_graph_component_size_min_threshold                     = null

    // PNA denoise
    pna_denoise_run_one_core_graph_denoising                = true
    pna_denoise_pval_threshold                              = 0.05
    pna_denoise_inflate_factor                              = 1.5

    // PNA analysis
    pna_analysis_compute_proximity                = true
    pna_analysis_proximity_nbr_of_permutations    = 100
    pna_analysis_compute_k_cores                  = true
    pna_analysis_compute_svd_var_explained        = true
    pna_analysis_svd_nbr_of_pivots                = 50

    // PNA layout
    pna_layout_no_node_marker_counts        = false
    pna_layout_layout_algorithm             = "wpmds_3d"
    pna_layout_pmds_pivots                  = 50
    pna_layout_wpmds_k                      = 5

    // Common output options
    save_json                    = true
    save_all                     = false

    // Boilerplate options
    outdir                       = null
    publish_dir_mode             = 'copy'
    email                        = null
    email_on_fail                = null
    plaintext_email              = false
    monochrome_logs              = false
    hook_url                     = null
    help                         = false
    help_full                    = false
    show_hidden                  = false
    version                      = false
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/pixelator/'
    trace_report_suffix          = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')// Config options
    config_profile_name        = null
    config_profile_description = null

    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null

    // Schema validation default options
    validate_params            = true
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'


def container_env_options = [
    "MPLCONFIGDIR": '/tmp/.config/matplotlib',
    "NUMBA_CACHE_DIR": "/tmp/.numba_cache",
]

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled         = true
        conda.enabled          = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
        docker.runOptions      = '-u $(id -u):$(id -g)'
        env                    = container_env_options
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
        env                    = container_env_options
    }
    podman {
        podman.enabled         = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
        podman.runOptions      = '--userns=keep-id'
        env                    = container_env_options
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        env                     = container_env_options
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
        env                     = container_env_options
    }
    apptainer {
        apptainer.enabled      = true
        apptainer.autoMounts   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        env                    = container_env_options
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
        process {
            resourceLimits = [
                memory: 8.GB,
                cpus  : 4,
                time  : 1.h
            ]
        }
    }
    gpu {
        docker.runOptions       = '-u $(id -u):$(id -g) --gpus all'
        apptainer.runOptions    = '--nv'
        singularity.runOptions  = '--nv'
    }

    test                       { includeConfig 'conf/test.config'                       }
    test_full                  { includeConfig 'conf/test_full.config'                  }
    test_panel_v2              { includeConfig 'conf/test_panel_v2.config'              }
    test_scsp_v1_immunology_v1 { includeConfig 'conf/test_scsp_v1_immunology_v1.config' }
    test_pna                   { includeConfig 'conf/test_pna.config' }
}

// Load nf-core custom profiles from different institutions

// If params.custom_config_base is set AND either the NXF_OFFLINE environment variable is not set or params.custom_config_base is a local path, the nfcore_custom.config file from the specified base path is included.
// Load nf-core/pixelator custom profiles from different institutions.
includeConfig params.custom_config_base && (!System.getenv('NXF_OFFLINE') || !params.custom_config_base.startsWith('http')) ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"


// Load nf-core/pixelator custom profiles from different institutions.
// TODO nf-core: Optionally, you can add a pipeline-specific nf-core config at https://github.com/nf-core/configs
includeConfig params.custom_config_base && (!System.getenv('NXF_OFFLINE') || !params.custom_config_base.startsWith('http')) ? "${params.custom_config_base}/pipeline/pixelator.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = [
    "bash",
    "-C",         // No clobber - prevent output redirection from overwriting files.
    "-e",         // Exit if a tool returns a non-zero status/exit code
    "-u",         // Treat unset variables and parameters as an error
    "-o",         // Returns the status of the last command to exit..
    "pipefail"    //   ..with a non-zero status or zero if all successfully execute
]

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${params.trace_report_suffix}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${params.trace_report_suffix}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${params.trace_report_suffix}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${params.trace_report_suffix}.html"
}

manifest {
    name            = 'nf-core/pixelator'
    // Keep both author and contributors fields for compatibility with Nextflow versions < 24.10.0
    author          = """Pixelgen Technologies AB""" // The author field is deprecated from Nextflow version 24.10.0, use contributors instead
    contributors    = [
        [
            name: 'Florian De Temmerman',
            affiliation: 'Pixelgen Technologies AB',
            email: 'florian.detemmerman@pixelgen.com',
            github: '@fbdtemme',
            contribution: ["author", "maintainer"], // List of contribution types ('author', 'maintainer' or 'contributor')
            orcid: '0009-0006-0086-2470'
        ],
        [
            name: 'Johan Dahlberg',
            affiliation: 'Pixelgen Technologies AB',
            email: 'johan.dahlberg@pixelgen.com',
            github: '@johandahlberg',
            contribution: ["contributor"], // List of contribution types ('author', 'maintainer' or 'contributor')
            orcid: '0000-0001-6962-1460'
        ],
        [
            name: 'Alvaro Martinez Barrio',
            affiliation: 'Pixelgen Technologies AB',
            email: 'alvaro.martinez.barrio@pixelgen.com',
            github: '@ambarrio',
            contribution: ["contributor"], // List of contribution types ('author', 'maintainer' or 'contributor')
            orcid: '0000-0001-5064-2093'
        ],
    ]

    homePage        = 'https://github.com/nf-core/pixelator'
    description     = """Pipeline for analysis of Molecular Pixelation assays"""
    mainScript      = 'main.nf'
    defaultBranch   = 'master'
    nextflowVersion = '!>=24.10.5'
    version         = '2.0.0'
    doi             = '10.1101/2023.06.05.543770'
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.4.2' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    defaultIgnoreParams = ["genomes"]
    monochromeLogs = params.monochrome_logs
    help {
        enabled = true
        command = "nextflow run nf-core/pixelator -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
        beforeText = """
-\033[2m----------------------------------------------------\033[0m-
                                        \033[0;32m,--.\033[0;30m/\033[0;32m,-.\033[0m
\033[0;34m        ___     __   __   __   ___     \033[0;32m/,-._.--~\'\033[0m
\033[0;34m  |\\ | |__  __ /  ` /  \\ |__) |__         \033[0;33m}  {\033[0m
\033[0;34m  | \\| |       \\__, \\__/ |  \\ |___     \033[0;32m\\`-._,-`-,\033[0m
                                        \033[0;32m`._,._,\'\033[0m
\033[0;35m  nf-core/pixelator ${manifest.version}\033[0m
-\033[2m----------------------------------------------------\033[0m-
"""
        afterText = """${manifest.doi ? "\n* The pipeline\n" : ""}${manifest.doi.tokenize(",").collect { "    https://doi.org/${it.trim().replace('https://doi.org/','')}"}.join("\n")}${manifest.doi ? "\n" : ""}
* The nf-core framework
    https://doi.org/10.1038/s41587-020-0439-x

* Software dependencies
    https://github.com/nf-core/pixelator/blob/master/CITATIONS.md
"""
    }
    summary {
        beforeText = validation.help.beforeText
        afterText = validation.help.afterText
    }
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
includeConfig 'conf/modules.pna.config'
