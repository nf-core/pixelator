nextflow_workflow {

    name "Test Workflow PNA"
    script "../main.nf"
    config "../nextflow.config"
    workflow "PNA"
    tag "subworkflows"
    tag "subworkflows_pixelator"
    tag "pixelator"
    tag "pixelator/pna"

    test("Default parameters [design: pna-2, panel: proxiome-immuno-155]") {
        when {

            params {
                pna_graph_component_size_min_threshold = 100
            }

            workflow {
                """
                def meta = [ id:'PNA055_Sample07_filtered_S7', design:'pna-2', panel:'proxiome-immuno-155', technology:'pna' ]
                input[0] = Channel.of([
                        meta,
                        [
                            file(params.pipelines_testdata_base_path + 'testdata/pna/fastq/PNA055_Sample07_filtered_S7_R1_001.fastq.gz', checkIfExists: true),
                            file(params.pipelines_testdata_base_path + 'testdata/pna/fastq/PNA055_Sample07_filtered_S7_R2_001.fastq.gz', checkIfExists: true)
                        ]
                ])
                input[1] = Channel.of([meta, []])
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(workflow.out.versions).match("versions") },
            )
        }
    }
}
